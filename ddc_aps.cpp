#include "ddc_aps.h"

namespace ddc {

Cvt_Burningcmd cmd[8] = {
    0x51,0x95,0xD0,0x19,0x24,0x00,0x10,   0x51,0x86,0xD0,0x21,0x24,0x00,0x10,0x00,//DATATYPE_EDID_VGA
    0x51,0x95,0xD0,0x23,0x24,0x00,0x10,   0x51,0x86,0xD0,0x25,0x24,0x00,0x10,0x00,//DATATYPE_EDID_DVI
    0x51,0x95,0xD0,0x27,0x24,0x00,0x10,   0x51,0x86,0xD0,0x29,0x24,0x00,0x10,0x00,//DATATYPE_EDID_HDMI1
    0x51,0x95,0xD0,0x31,0x24,0x00,0x10,   0x51,0x86,0xD0,0x33,0x24,0x00,0x10,0x00,//DATATYPE_EDID_HDMI2
    0x51,0x95,0xD0,0x41,0x24,0x00,0x10,   0x51,0x86,0xD0,0x43,0x24,0x00,0x10,0x00,//DATATYPE_EDID_HDMI3
    0x51,0x95,0xD0,0x35,0x24,0x00,0x10,   0x51,0x86,0xD0,0x37,0x0D,0x00,0x10,0x00,//DATATYPE_EDID_DP
    0x51,0x95,0xD0,0x65,0x07,0x00,0x10,   0x51,0x86,0xD0,0x73,0x07,0x00,0x10,0x00,//DATATYPE_HDCPKEY
};

unsigned char ErasehdcpkeyCmd[9] = {0x51,0x86,0xD0,0x65,0x0A,0xFF,0x00,0x00,0xF9};

bool hdcpkeyverify(quint8 *senddata,quint8 *feedback)
{
    Q_UNUSED(senddata);
    if(*(feedback+7)==0xE0)
        return true;
    else
        return false;
}

burnMsg_t hdcpmsg =
{
    cmd[6].burnhead,
    8,
    9,
    &hdcpkeyverify,
    nullptr
};


}
